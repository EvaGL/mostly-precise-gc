Зам:
коментарии вида:
/**
* ...
*...
*/
или
/**
...
*/
или
///
или
//!
или
/*!
* ...
*/
или
/*!
...
*/
использовать для конченой докуметации.

1. Стиль коментария к классам, функциям, структурам и т.д.
	1.1. форма:
/**
ClassName class comment
*/
	class ClassName {
		...
	};
	1.2 
		1) Коментарии к классам, функциям, структурам и т.д. пишутся с самого начала строчки
			или выравниваются с ними.
		2) Коментарии к полям класса и конкретному куску кода пишутся справа от кода(все на одном уровне)
			или на предыдущей строчке. Выравнивание идет вместе с обычным кодом.
	1.3. содержание коментария:
		0) @class --- имя класса
		1) @brief --- краткое описание комментируемой сущности.
		2) @detailed --- подробное описание сущности, то что будет показано,
			когда вы нажмете в документации рядом с коротким описанием ссылку "Подробней".
		3) @param --- параметры передаваемые функции.
		4) @return --- возвращаемое функцией значение.
		5) @throw --- исключения выбрасываемые функцией.
		6) @note --- 
		7) @mainpage --- Основная страница проекта, то с чего начинается просмотр документации.
		8) @page --- Дополнительные страницы проекта.(логическая подчасть). Например: во всех .h файлах
		9) @ref --- Ссылки на страницы проекта, с их помощью можно организовать например ссылки с главной страницы проекта на страницы подпроектов.
		10) @code – @endcode --- для приведения фрагмента кода
		11) - --- перечисление списка
			напр:
/**
Список:
- Первый пункт
- Второй пункт
*/
		12)
			\struct документирование С-структуры
			\union документирование объединения
			\enum документирование перечисления 
			\fn документирование функции
			\var документирование переменной, или typedef, или значения enum. 
			\def документирование #define. 
			\typedef документирование определения типа
			\file документирование файла
			\namespace документирование пространства имен
			\package документирование Java-контейнера
			\interface документирование интерфейса IDL
			
			пример:
/*! \def MAX(a,b)
    \brief Макрос, который возвращает максимум \a a или \a b.
 
       Подробности.
*/
#define MAX(a,b) (((a)>(b))?(a):(b))

/*! \var typedef unsigned int UINT32
    \brief Переопределение типа для a .
 
    Подробности.
*/
typedef unsigned int UINT32;
		
2. Short style guide
	1) Все переменные пишутся с маленькой буквы
	2) Все ф-ии пишутся с маленькой буквы
	3) Все имена классов пишутся с большой буквы
	4) Макросы и только макросы пишутся целиком заглавными буквами
	5) Описание (декларация) класса находится в h-файле с тем же именем, что и имя класса.
	6) Реализация методов класса находится в cpp-файле с тем же именем, 
		что и имя класса; исключения: реализация является целиком inline-овой, 
		класс шаблонный, несколько мелких родственных классов.
	7) Имена переменных, функций, классов должны чётко отражать главный 
		концептуальный смысл обозначаемого
	8) В начале каждого файла идет "шапка", содержащая в себе: комментарий, 
		дающий краткое описание данного файла, можно добавлять имя автора, время создания, 
		модификации файла
	9) Описание класса начинается с его public-раздела. Все разделы должны быть четко разделены и не пересекаться
	10) В заголовочных файлах должно быть минимальное количество директив #include
	11) Отступы делаются с помощью табов(не пробелов!!!)
	12) No warnings
	
3. Все комментарии пишутся на английском языке. За ооочень редким исключением.
